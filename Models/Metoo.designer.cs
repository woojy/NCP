#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace metoo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="metoo")]
	public partial class MetooDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void Insertpassword(password instance);
    partial void Updatepassword(password instance);
    partial void Deletepassword(password instance);
    partial void Insertregistration(registration instance);
    partial void Updateregistration(registration instance);
    partial void Deleteregistration(registration instance);
    #endregion
		
		public MetooDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["metooConnectionString3"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MetooDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MetooDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MetooDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MetooDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<student> student
		{
			get
			{
				return this.GetTable<student>();
			}
		}
		
		public System.Data.Linq.Table<password> password
		{
			get
			{
				return this.GetTable<password>();
			}
		}
		
		public System.Data.Linq.Table<registration> registration
		{
			get
			{
				return this.GetTable<registration>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.student")]
	public partial class student
	{
		
		private int _c11;
		
		private int _c12;
		
		private int _c13;
		
		private int _c14;
		
		private int _c15;
		
		private int _c16;
		
		private int _c21;
		
		private int _c22;
		
		private int _c23;
		
		private int _c24;
		
		private int _c25;
		
		private int _c26;
		
		private int _c31;
		
		private int _c32;
		
		private int _c33;
		
		private int _c34;
		
		private int _c35;
		
		private int _c36;
		
		public student()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c11", DbType="Int NOT NULL")]
		public int c11
		{
			get
			{
				return this._c11;
			}
			set
			{
				if ((this._c11 != value))
				{
					this._c11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c12", DbType="Int NOT NULL")]
		public int c12
		{
			get
			{
				return this._c12;
			}
			set
			{
				if ((this._c12 != value))
				{
					this._c12 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c13", DbType="Int NOT NULL")]
		public int c13
		{
			get
			{
				return this._c13;
			}
			set
			{
				if ((this._c13 != value))
				{
					this._c13 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c14", DbType="Int NOT NULL")]
		public int c14
		{
			get
			{
				return this._c14;
			}
			set
			{
				if ((this._c14 != value))
				{
					this._c14 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c15", DbType="Int NOT NULL")]
		public int c15
		{
			get
			{
				return this._c15;
			}
			set
			{
				if ((this._c15 != value))
				{
					this._c15 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c16", DbType="Int NOT NULL")]
		public int c16
		{
			get
			{
				return this._c16;
			}
			set
			{
				if ((this._c16 != value))
				{
					this._c16 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c21", DbType="Int NOT NULL")]
		public int c21
		{
			get
			{
				return this._c21;
			}
			set
			{
				if ((this._c21 != value))
				{
					this._c21 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c22", DbType="Int NOT NULL")]
		public int c22
		{
			get
			{
				return this._c22;
			}
			set
			{
				if ((this._c22 != value))
				{
					this._c22 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c23", DbType="Int NOT NULL")]
		public int c23
		{
			get
			{
				return this._c23;
			}
			set
			{
				if ((this._c23 != value))
				{
					this._c23 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c24", DbType="Int NOT NULL")]
		public int c24
		{
			get
			{
				return this._c24;
			}
			set
			{
				if ((this._c24 != value))
				{
					this._c24 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c25", DbType="Int NOT NULL")]
		public int c25
		{
			get
			{
				return this._c25;
			}
			set
			{
				if ((this._c25 != value))
				{
					this._c25 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c26", DbType="Int NOT NULL")]
		public int c26
		{
			get
			{
				return this._c26;
			}
			set
			{
				if ((this._c26 != value))
				{
					this._c26 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c31", DbType="Int NOT NULL")]
		public int c31
		{
			get
			{
				return this._c31;
			}
			set
			{
				if ((this._c31 != value))
				{
					this._c31 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c32", DbType="Int NOT NULL")]
		public int c32
		{
			get
			{
				return this._c32;
			}
			set
			{
				if ((this._c32 != value))
				{
					this._c32 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c33", DbType="Int NOT NULL")]
		public int c33
		{
			get
			{
				return this._c33;
			}
			set
			{
				if ((this._c33 != value))
				{
					this._c33 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c34", DbType="Int NOT NULL")]
		public int c34
		{
			get
			{
				return this._c34;
			}
			set
			{
				if ((this._c34 != value))
				{
					this._c34 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c35", DbType="Int NOT NULL")]
		public int c35
		{
			get
			{
				return this._c35;
			}
			set
			{
				if ((this._c35 != value))
				{
					this._c35 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c36", DbType="Int NOT NULL")]
		public int c36
		{
			get
			{
				return this._c36;
			}
			set
			{
				if ((this._c36 != value))
				{
					this._c36 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.password")]
	public partial class password : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _key;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnkeyChanging(string value);
    partial void OnkeyChanged();
    #endregion
		
		public password()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[key]", Storage="_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string key
		{
			get
			{
				return this._key;
			}
			set
			{
				if ((this._key != value))
				{
					this.OnkeyChanging(value);
					this.SendPropertyChanging();
					this._key = value;
					this.SendPropertyChanged("key");
					this.OnkeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registration")]
	public partial class registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _major;
		
		private string _promise1;
		
		private string _promise2;
		
		private string _promise3;
		
		private System.Nullable<int> _count;
		
		private System.Data.Linq.Binary _ImageFile;
		
		private System.Nullable<int> _ImageSize;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmajorChanging(string value);
    partial void OnmajorChanged();
    partial void Onpromise1Changing(string value);
    partial void Onpromise1Changed();
    partial void Onpromise2Changing(string value);
    partial void Onpromise2Changed();
    partial void Onpromise3Changing(string value);
    partial void Onpromise3Changed();
    partial void OncountChanging(System.Nullable<int> value);
    partial void OncountChanged();
    partial void OnImageFileChanging(System.Data.Linq.Binary value);
    partial void OnImageFileChanged();
    partial void OnImageSizeChanging(System.Nullable<int> value);
    partial void OnImageSizeChanged();
    #endregion
		
		public registration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(256) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_major", DbType="NChar(256) NOT NULL", CanBeNull=false)]
		public string major
		{
			get
			{
				return this._major;
			}
			set
			{
				if ((this._major != value))
				{
					this.OnmajorChanging(value);
					this.SendPropertyChanging();
					this._major = value;
					this.SendPropertyChanged("major");
					this.OnmajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_promise1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string promise1
		{
			get
			{
				return this._promise1;
			}
			set
			{
				if ((this._promise1 != value))
				{
					this.Onpromise1Changing(value);
					this.SendPropertyChanging();
					this._promise1 = value;
					this.SendPropertyChanged("promise1");
					this.Onpromise1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_promise2", DbType="NVarChar(MAX)")]
		public string promise2
		{
			get
			{
				return this._promise2;
			}
			set
			{
				if ((this._promise2 != value))
				{
					this.Onpromise2Changing(value);
					this.SendPropertyChanging();
					this._promise2 = value;
					this.SendPropertyChanged("promise2");
					this.Onpromise2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_promise3", DbType="NVarChar(MAX)")]
		public string promise3
		{
			get
			{
				return this._promise3;
			}
			set
			{
				if ((this._promise3 != value))
				{
					this.Onpromise3Changing(value);
					this.SendPropertyChanging();
					this._promise3 = value;
					this.SendPropertyChanged("promise3");
					this.Onpromise3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageSize", DbType="Int")]
		public System.Nullable<int> ImageSize
		{
			get
			{
				return this._ImageSize;
			}
			set
			{
				if ((this._ImageSize != value))
				{
					this.OnImageSizeChanging(value);
					this.SendPropertyChanging();
					this._ImageSize = value;
					this.SendPropertyChanged("ImageSize");
					this.OnImageSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
